<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.store.dao.StoreDao">
    <!--    统计店长用户id-->
    <select id="countUserId" parameterType="com.store.entity.StoreInfo" resultType="int">
        select count(user_id)
        from
            t_sys_store
        where user_id=#{userId}
    </select>
    <!--    统计门店联系电话-->
    <select id="countPhone" parameterType="com.store.entity.StoreInfo"  resultType="int">
        select count(store_phone)
        from
            t_sys_store
        where store_phone=#{phone}
    </select>
    <!--    统计门店联系电话-->
    <select id="countPhone2" parameterType="com.store.entity.StoreInfo"  resultType="int">
        select count(store_phone)
        from
            t_sys_store
        where store_phone=#{phone}
    </select>
<!--    新增门店-->
    <insert id="addStore" parameterType="com.store.entity.StoreInfo">
        insert into t_sys_store
            (store_id,
            store_num,
            store_name,
            user_id,
            store_phone,
            bus_code,
            invite_code,
            store_address,
            provice_id,
            provice_name,
            city_id,
            city_name,
            area_id,
            area_name,
            is_deleted,
            create_people,
            create_time,
            update_people,
            update_time,
            version)
        values (
            #{storeId},
            #{storeCode},
            #{storeName},
            #{userId},
            #{phone},
            #{liceseCode},
            #{inviteCode},
            #{address},
            #{provienceId},
            #{provienceName},
            #{cityId},
            #{cityName},
            #{areaId},
            #{areaName},
            0,
            #{createPeople},
            now(),
            #{updatePeople},
            now(),
            0)
    </insert>
<!--省份下拉查询-->
    <select id="provinceStoreList" parameterType="com.store.entity.ChinaVo" resultType="com.store.entity.ChinaVo">
        select
            a.dictionaries_id dictionariesId,
            a.dict_name dictionariesName,
            a.dict_value dictionariesValue,
            a.parent_code parentCode
        from dictionaries a
        where a.dict_type='省'
    </select>
    <!--城市下拉查询-->
    <select id="cityStoreList" parameterType="com.store.entity.ChinaVo" resultType="com.store.entity.ChinaVo">
        select
            a.dictionaries_id dictionariesId,
            a.dict_name dictionariesName,
            a.dict_value dictionariesValue,
            a.parent_code parentCode
        from dictionaries a
        where a.dict_type='市'
    </select>
    <!--区下拉查询-->
    <select id="areaStoreList" parameterType="com.store.entity.ChinaVo" resultType="com.store.entity.ChinaVo">
        select
            a.dictionaries_id dictionariesId,
            a.dict_name dictionariesName,
            a.dict_value dictionariesValue,
            a.parent_code parentCode
        from dictionaries a
        where a.dict_type='区'
    </select>
<!--    查询门店详情-->
    <select id="findStoreDetailsById" parameterType="java.lang.String" resultType="com.store.entity.StoreDetialVO">
        select
            store_id      storeId,
            store_name storeName,
            user_id    userId,
            store_phone phone,
            bus_code    liceseCode,
            store_address address,
            provice_name  provienceName,
            city_name   cityName,
            area_name   areaName
        from t_sys_store
        where store_id=#{storeId}
        and is_deleted=0
    </select>
<!--    修改门店-->
    <update id="updateStoreById" parameterType="com.store.entity.StoreInfo">
        update t_sys_store
        set
            store_name      =#{storeName},
            store_phone     =#{phone},
            bus_code        =#{liceseCode},
            store_address  =#{address},
            provice_id      =#{provienceId},
            city_id         =#{cityId},
            area_id         =#{areaId},
            update_people   =#{updatePeople},
            update_time     =now(),
            version         =version+1
        where store_id      =#{storeId}
        and   version       =#{version}
    </update>
<!--    查询门店列表-->
    <select id="listStore" parameterType="com.store.entity.StoreListVO" resultType="com.store.entity.StoreListVO">
        select
            a.store_name storeName,
            a.store_num  storeCode,
            b.user_name  managerName,
            b.user_account storeAccount,
            a.store_phone phone,
            a.store_address address,
            a.invite_code inviteCode,
            a.store_id    storeId,
            a.provice_id  provienceId,
            a.city_id     cityId,
            a.area_id     areaId
        from t_sys_store a
        left join t_sys_user b on a.user_id=b.user_id
        where a.is_deleted=0
        <if test="storeName != null and storeName != ''">
        and a.store_name like concat('%', #{storeName}, '%')
        </if>
        <if test="storeCode != null and storeCode != ''">
            and a.store_num like concat('%', #{storeCode}, '%')
        </if>
        <if test="managerName != null and managerName != ''">
            and b.user_name like concat('%', #{managerName}, '%')
        </if>
        <if test="provienceId != null and provienceId != ''">
            and a.provice_id like concat('%', #{provienceId}, '%')
        </if>
        <if test="cityId != null and cityId != ''">
            and a.city_id like concat('%', #{cityId}, '%')
        </if>
        <if test="areaId != null and areaId != ''">
            and a.area_id like concat('%', #{areaId}, '%')
        </if>
        order by a.update_time desc
    </select>
<!--    删除门店-->
    <delete id="deleteStore" parameterType="com.store.entity.StoreInfo">
        update t_sys_store
        set
            is_deleted=1,
            update_time=now(),
            update_people=#{userId},
            version=version+1
        where store_id in
        <foreach item="item" index="index" collection="listId" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>